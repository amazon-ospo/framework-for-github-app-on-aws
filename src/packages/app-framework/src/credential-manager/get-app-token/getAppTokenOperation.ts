import { Operation } from '@aws-smithy/server-common';
import {
  ClientSideError,
  GetAppTokenInput,
  GetAppTokenOutput,
  ServerSideError,
} from '@framework.api/app-framework-ssdk';
import { getAppTokenImpl } from './getAppToken';
import { ClientError, RequestError, ServerError } from '../../error';

/**
 * Operation handler generated by Smithy that retrieves a GitHub App token using the given App ID.
 *
 * This function performs validation on the input, looks up the app data from
 * App table (provided via context), and returns a signed token.
 * ---
 * @param input The request input which must include appId.
 * @param _context Context passed in from the framework, must include `tableName` for DynamoDB access.
 * @returns The signed app token as a GetAppTokenOutput object.
 */
export const getAppTokenOperation: Operation<
  GetAppTokenInput,
  GetAppTokenOutput,
  { tableName: string }
> = async (input, _context): Promise<GetAppTokenOutput> => {
  console.log('getAppTokenOperation', input);
  const appId = input.appId;
  const tableName = _context.tableName;
  if (!appId) {
    throw new RequestError('App Id is required');
  }
  if (!tableName) {
    throw new ServerError('Missing App Table name');
  }
  try {
    const appToken = await getAppTokenImpl({
      appId,
      tableName: tableName,
    });
    return {
      appId,
      appToken,
    };
  } catch (error) {
    if (error instanceof ClientError) {
      throw new ClientSideError({ message: error.message });
    }
    throw new ServerSideError({ message: `${error}` });
  }
};
